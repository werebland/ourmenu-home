{"version":3,"file":"static/webpack/static/development/pages/request-demo.js.f6a05bb73ff004cfa754.hot-update.js","sources":["webpack:///./pages/request-demo.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport Head from 'next/head'\nimport styled from 'styled-components';\nimport {\n  typography,\n  layout,\n  space,\n  color,\n  display,\n  flexbox,\n  border,\n} from 'styled-system'\nimport { withRouter } from 'next/router';\nimport Dropzone from 'react-dropzone'\nimport base from '../config'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nimport Nav from '../components/Nav'\nimport Footer from '../components/Footer'\n\nvar storageRef = firebase.storage().ref();\n\nconst PageWrapper = styled.div`\n\n`;\n\nconst PageHeader = styled.div(\n  {\n    boxSizing: 'border-box',\n  },\n  color,\n  layout,\n  space,\n  display,\n  flexbox,\n);\n\nconst PageTitle = styled.h1(\n  {},\n  typography,\n  color,\n  space,\n);\n\nconst PageSubtitle = styled.h3(\n  {},\n  typography,\n  color,\n  space,\n);\n\nconst PageContent = styled.div(\n  {\n    boxSizing: 'border-box',\n  },\n  space,\n  display,\n  flexbox,\n);\n\nconst Form = styled.form(\n  {\n    boxSizing: 'boder-box'\n  },\n  layout,\n  border,\n  space,\n  flexbox,\n  display,\n);\n\nconst Uploader = styled.div(\n  {\n    boxSizing: 'border-box',\n  },\n  border,\n  color,\n  layout,\n  display,\n  flexbox,\n  space,\n  color,\n  typography,\n);\n\nconst File = styled.div(\n  {\n    boxSizing: 'border-box',\n\n    '& span': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  },\n  display,\n  flexbox,\n  layout,\n  space,\n  color,\n  border,\n);\n\nconst Label = styled.label(\n  {},\n  typography,\n  color,\n  space,\n);\n\nconst Input = styled.input(\n  {\n  },\n  display,\n  layout,\n  space,\n  border,\n  typography,\n);\n\nconst Textarea = styled.textarea(\n  {},\n  display,\n  layout,\n  space,\n  border,\n  typography,\n);\n\nconst Submit = styled.input(\n  {\n    boxSizing: 'border-box',\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n\n    ':hover': {\n      backgroundColor: '#fff',\n      color: '#1a1a1a',\n    }\n  },\n  border,\n  flexbox,\n  space,\n  typography,\n  color,\n);\n\nclass RequestDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: this.props.router.query.email || \"\",\n      name: \"\",\n      menus: [],\n      isSuccess: false,\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    const { name, email, menus } = this.state\n    const data = {\n      name,\n      email,\n      menus: []\n    }\n    base.addToCollection('users', data)\n      .then((data) => {\n        console.log(data.id)\n        if (menus.length > 0) {\n          this.handleUpload(data.id)\n        }\n      }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleUpload(id) {\n    const files = this.state.menus\n    let downloadLinks = []\n    files.forEach(function(file) {\n      var metadata = {\n        contentType: 'image/jpeg'\n      };\n      var uploadTask = storageRef.child(`users/${id}/menus/`).put(file, metadata);\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\n            console.log('Upload is paused');\n            break;\n          case firebase.storage.TaskState.RUNNING: // or 'running'\n            console.log('Upload is running');\n            break;\n        }\n      }, function(error) {\n\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case 'storage/unauthorized':\n          console.log('unauthorized');\n          break;\n\n        case 'storage/canceled':\n          console.log('canceled');\n          break;\n\n        case 'storage/unknown':\n          console.log('idk');\n          break;\n      }\n    }, function() {\n      // Upload completed successfully, now we can get the download URL\n      uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n        downloadLinks.push(downloadURL)\n        console.log(downloadLinks);\n        if (downloadLinks.length === files.length) {\n          console.log('files uploaded');\n          const data = {\n            menus: downloadLinks\n          }\n          base.updateDoc(`users/${id}`, data)\n          .then(() => {\n              console.log('doc updated');\n            }).catch(err => {\n              console.log(err);\n          });\n        }\n      });\n      });\n    })\n  }\n\n  handleDrop(files) {\n    console.log(files);\n    let { menus } = this.state\n    files.forEach((file) => menus.push(file))\n    console.log(menus);\n    this.setState({\n      menus\n    })\n  }\n\n  removeFile(i) {\n    let { menus } = this.state\n    menus.splice(i, 1)\n    this.setState({\n      menus\n    })\n  }\n\n  render() {\n    return (\n      <PageWrapper>\n        <Head>\n          <title>\n            Get a free custom demo | OurMenu\n          </title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=0.86, maximum-scale=3.0, minimum-scale=0.86\" />\n          <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/static/apple-touch-icon.png\"/>\n          <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/static/favicon-32x32.png\"/>\n          <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/static/favicon-16x16.png\"/>\n          <link rel=\"manifest\" href=\"/static/site.webmanifest\"/>\n          <link rel=\"mask-icon\" href=\"/static/safari-pinned-tab.svg\" color=\"#000\"/>\n          <link rel=\"shortcut icon\" href=\"/static/favicon.ico\"/>\n          <meta name=\"msapplication-TileColor\" content=\"#000000\"/>\n          <meta name=\"msapplication-config\" content=\"/static/browserconfig.xml\"/>\n          <meta name=\"theme-color\" content=\"#000\"/>\n        </Head>\n        <Nav transparent/>\n        <PageHeader\n          width=\"100vw\"\n          minHeight=\"50vh\"\n          bg=\"blue\"\n          color=\"black\"\n          pt=\"196px\"\n          pl={['16px', '24px', '56px']}\n          pr={['16px', '24px', '56px']}\n          pb={['16px', '24px', '56px']}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <PageTitle\n            fontSize=\"4.5rem\"\n            fontWeight=\"bold\"\n            lineHeight=\"5rem\"\n            color=\"black\"\n            m=\"0\"\n          >\n            See what you're missing.\n            <br/>\n            Get a custom demo.\n          </PageTitle>\n        </PageHeader>\n        <PageContent\n          display=\"flex\"\n          alignItems=\"flex-start\"\n          justifyContent=\"center\"\n          p={['16px', '24px', '56px']}\n        >\n          <Form\n            width=\"100%\"\n            maxWidth=\"560px\"\n            border=\"2px solid\"\n            borderColor=\"black\"\n            borderRadius=\"8px\"\n            p=\"24px\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            onSubmit={(e) => this.handleSubmit(e)}\n          >\n            {this.state.isSuccess\n              ?\n              <div>\n                Success! Thanks, {this.state.name}. We'll be in touch at {this.state.email}.\n              </div>\n              :\n              <Fragment>\n                <Dropzone\n                  multiple\n                  onDrop={acceptedFiles => this.handleDrop(acceptedFiles)}\n                >\n                  {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject}) => (\n                    <section>\n                      <Uploader\n                      border=\"2px solid\"\n                      borderColor=\"lightGrey\"\n                      borderRadius=\"8px\"\n                      borderStyle=\"dashed\"\n                      display=\"flex\"\n                      flexDirection=\"column\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      width=\"100%\"\n                      height=\"100%\"\n                      minHeight=\"160px\"\n                      p=\"48px\"\n                      mb=\"16px\"\n                      fontSize=\"1rem\"\n                      fontWeight=\"bold\"\n                      color=\"grey\"\n                      bg={isDragActive ? 'lightGrey' : 'white'}\n                      {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        Drop your menus here or click to upload\n                      </Uploader>\n                    </section>\n                  )}\n                </Dropzone>\n                {this.state.menus.map((file, i) =>\n                  <File key={file.path}\n                    width=\"100%\"\n                    display=\"inline-flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    p=\"16px 24px\"\n                    borderRadius=\"8px\"\n                    bg=\"black\"\n                    color=\"white\"\n                    mb=\"8px\"\n                  >\n                    <span>{file.path}</span>\n                    <span onClick={() => this.removeFile(i)}>\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"#fff\">\n                        <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n                      </svg>\n                    </span>\n                  </File>\n                )}\n                <Label\n                  fontSize=\".875rem\"\n                  fontWeight=\"bold\"\n                  color=\"grey\"\n                  mb=\"4px\"\n                  htmlFor=\"name\">\n                  Full name*\n                </Label>\n                <Input\n                  border=\"2px solid\"\n                  borderColor=\"black\"\n                  borderRadius=\"8px\"\n                  display=\"flex\"\n                  p=\"8px 16px\"\n                  mb=\"16px\"\n                  fontSize=\"1.25rem\"\n                  fontWeight=\"regular\"\n                  color=\"black\"\n                  placeholder=\"Your name\"\n                  type=\"text\"\n                  autoComplete=\"on\"\n                  required\n                  value={this.state.name}\n                  name=\"name\"\n                  onChange={(e) => this.handleChange(e)}\n                />\n                <Label\n                  fontSize=\".875rem\"\n                  fontWeight=\"bold\"\n                  color=\"grey\"\n                  mb=\"4px\"\n                  htmlFor=\"email\">\n                  Email*\n                </Label>\n                <Input\n                  border=\"2px solid\"\n                  borderColor=\"black\"\n                  borderRadius=\"8px\"\n                  display=\"flex\"\n                  flex=\"1\"\n                  p=\"8px 16px\"\n                  mb=\"16px\"\n                  fontSize=\"1.25rem\"\n                  fontWeight=\"regular\"\n                  color=\"black\"\n                  placeholder=\"Your email\"\n                  type=\"email\"\n                  autoComplete=\"on\"\n                  required\n                  value={this.state.email}\n                  name=\"email\"\n                  onChange={(e) => this.handleChange(e)}\n                />\n                <Submit\n                  border=\"2px solid\"\n                  borderRadius='8px'\n                  borderColor=\"black\"\n                  p=\"16px 24px\"\n                  fontSize=\"1rem\"\n                  fontWeight=\"bold\"\n                  color=\"black\"\n                  bg=\"blue\"\n                  type=\"submit\"\n                  value=\"Request your demo\"\n                />\n              </Fragment>\n            }\n          </Form>\n        </PageContent>\n        <Footer />\n      </PageWrapper>\n    );\n  }\n\n}\n\nexport default withRouter(RequestDemo);\n"],"mappings":"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","sourceRoot":""}